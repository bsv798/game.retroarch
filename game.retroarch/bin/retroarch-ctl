#!/usr/bin/env bash

ADDON_ID="game.retroarch"
ADDON_DIR="$(dirname $0)"
ADDON_DIR="${ADDON_DIR%/bin}"

run(){
  ROM="$1"

cat > /tmp/game.retroarch.conf << EOF
  ROM="${ROM}"
EOF

  [ "$(systemctl is-enabled game.retroarch 2>/dev/null)" == "linked" ] || enable

  systemctl start game.retroarch
}

enable(){
  mkdir -p /storage/.config/system.d

  systemctl enable --quiet "${ADDON_DIR}/${ADDON_ID}.service"
  chmod +x "${ADDON_DIR}/bin"/*
}

pre(){
  systemctl stop kodi
  echo performance | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor >/dev/null
  echo high > /sys/class/drm/card0/device/power_dpm_force_performance_level
}

start(){
  ROM="${1:-$ROM}"

  . /etc/profile
  oe_setup_addon "${ADDON_ID}"

  HOME="${ADDON_HOME}"
  export LD_LIBRARY_PATH="${ADDON_DIR}/lib/"
  export VK_ICD_FILENAMES="${ADDON_DIR}/lib/intel_icd.x86_64.json:${ADDON_DIR}/lib/radeon_icd.x86_64.json"

  [ "${DOWNLOAD_ASSETS:-true}" == "true" ] && assets "${ADDON_HOME}/.config/retroarch/assets"
  [ "${DOWNLOAD_ASSETS:-true}" == "true" ] && autoconfig "${ADDON_HOME}/.config/retroarch/autoconfig"
  [ "${LINK_LIBRETRO_CORES:-true}" == "true" ] && cores "${ADDON_HOME}/.config/retroarch/cores"

  EXT="${ROM##*.}"
  [ "${EXT}" == "zip" ] && EXT=$(unzip -ql "${ROM}" | head -n3 | tail -n1 | cut -c 31-) && EXT="${EXT##*.}"
  CORE=$(grep -El "supported_extensions.*[|\"']${EXT}[|\"']" "${ADDON_HOME}/.config/retroarch/cores/"*.info | head -n 1 | sed 's/\.info$/.so/')
  echo "ROM='${ROM}'"
  echo "EXT='${EXT}'"
  echo "CORE='${CORE}'"

  if [ "${ROM}" ] && [ "${CORE}" ]
  then
    "${ADDON_DIR}/bin/retroarch" -v -L "${CORE}" "${ROM}"
  else
    "${ADDON_DIR}/bin/retroarch" -v
  fi
}

post(){
  echo auto > /sys/class/drm/card0/device/power_dpm_force_performance_level
  echo powersave | tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor >/dev/null
  systemctl start kodi
  sleep 2
  kodi-send -a "RunAddon(script.games.rom.collection.browser)"
}

assets(){
  ASSETS_DIR="${1:?No assets path provided. Usage: $(basename $0) assets TARGET_ASSETS_PATH}"
  download https://buildbot.libretro.com/assets/frontend/assets.zip "${ASSETS_DIR}"
}

autoconfig(){
  AUTOCONFIG_DIR="${1:?No auticonfig path provided. Usage: $(basename $0) autoconfig TARGET_AUTOCONFIG_PATH}"
  download https://buildbot.libretro.com/assets/frontend/autoconfig.zip "${AUTOCONFIG_DIR}"
}

download(){
  URL="${1:?No url to download provided}"
  TARGET_DIR="${2:?No target path provided}"
  DESC="${TARGET_DIR##*/}"
  TMP="$(mktemp)"

  mkdir -p "${TARGET_DIR}"

  if [ -z "$(ls -A """${TARGET_DIR}""")" ]
  then
    echo "${DESC} empty: downloading ${DESC}..."
    wget "${URL}" -O "${TMP}"
    unzip -q "${TMP}" -d "${TARGET_DIR}"
    rm "${TMP}"
  else
    echo "${DESC} present"
  fi
}

cores(){
  CORES_DIR="${1:?No cores path provided. Usage: $(basename $0) cores TARGET_CORES_PATH}"
  mkdir -p "${CORES_DIR}"


  for dir in /storage/.kodi/addons/game.libretro.*/
  do
    core="${dir%/*}"
    core="${core##*/}"
    xml="${dir}addon.xml"
    so="${dir}${core}.so"

    [ -f "${so}" ] && ln -f -s "${so}" "${CORES_DIR}"
    [ -f "${xml}" ] && coreinfo "${xml}" > "${CORES_DIR}/${core}.info"

  done

  # update game.retroarch extensions from installed cores
  EXT=$(grep -h supported_extensions ${CORES_DIR}/*.info | sed -E 's/^.*"(.*)"$/\1/g' | tr "\n" "|")
  xml ed --inplace -u "addon/extension[@point='kodi.gameclient']/extensions" -v "${EXT%|}" "${ADDON_DIR}/addon.xml"
}

coreinfo(){
  XML_FILE="${1:?No addon.xml provided. Usage: $(basename $0) coreinfo /path/to/source/addon.xml}"

  xml sel -T \
    -t -m '/addon/@*' -v "concat(name(),' = \"',.,'\"')" -n \
    -t -m '/addon/extension//*[not(child::*) and (starts-with(@lang,"en") or not(@lang))]' -v "concat(name(),' = \"',.,'\"')" -n \
    "${XML_FILE}" | \
  grep -E "^(id|name|version|provider-name|platforms|extensions|license|summary|description) =" | \
  sed -E 's#^name = "(.+) - (.+) / (.+) \((.+)\)"$#manufacturer = "\1"\ndatabase = "\1 - \2|\1 - \3"\nsystem_name = "\2|\3"\ncorename = "\4"#' | \
  sed -E 's/^name = "(.+) - (.+) \((.+)\)"$/manufacturer = "\1"\ndatabase = "\1 - \2"\nsystem_name = "\2"\ncorename = "\3"/' | \
  sed -E 's/^version =/display_version =/' | \
  sed -E 's/^provider-name =/authors =/' | \
  sed -E 's/^extensions =/supported_extensions =/' | \
  sed -E 's/^provider-name =/authors =/' | \
  sed -E 's/^summary =/display_name =/'

  # sed -E 's/^id =/corename =/' | \
  # sed -E 's/^platforms =/system_name =/' | \
  # sed -E 's/^name = "(.+) - (.+) \((.+)\)"$/manufacturer = "\1"\ndatabase = "\1 - \2"\ncorename = "\3"/' | \
  # unused=id,platforms
  # same=description,license
}

#echo "$(date) - $0 $@" >> /storage/.kodi/addons/game.retroarch/retroarch-ctl.log
actions=$(grep -Eo '^[a-z1-9_]+\(\)' "$0" | grep -Eo '[a-z1-9_]+' | sed ':a; N; $!ba; s/\n/|/g')
cmd="${1:?No command provided. Usage: $(basename """$0""") ${actions}}"
echo "${cmd}" | grep -qE "^(${actions})$" || { echo "Unknown command ${cmd}. Usage: $(basename """$0""") ${actions}"; exit 1;}
shift 1
"$cmd" "$1" "$2"
